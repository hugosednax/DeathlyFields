<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_xview[0] = MAP_INIT_POSITION_X;
view_yview[0] = MAP_INIT_POSITION_Y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var prevColor = draw_get_color();
var initX = view_xview[0];
var initY = view_yview[0];
draw_set_color(c_gray);
//draw_rectangle(VIEW_WIDTH-320,0,VIEW_WIDTH,VIEW_HEIGHT,0);
draw_sprite_ext(sprInterfaceRect,0,initX+VIEW_WIDTH-320,initY,VIEW_WIDTH/sprite_get_width(sprInterfaceRect),VIEW_HEIGHT/sprite_get_height(sprInterfaceRect),0,c_white,0.6);
draw_set_color(c_black);
draw_rectangle(initX+VIEW_WIDTH-320,initY,initX+VIEW_WIDTH,initY+VIEW_HEIGHT,1);
draw_set_color(c_black);
var objSel = objSelectionManager.selectedInstance;
if(objSel != -1){
    draw_text(initX+VIEW_WIDTH-300,initY+60,objSel.name);
    if(objSel.sprite_index!=-1){
        draw_rectangle( initX+VIEW_WIDTH-300,initY+90,
                        initX+VIEW_WIDTH-200,initY+190,1);
        draw_sprite_ext(objSel.sprite_index,0,initX+VIEW_WIDTH-250,initY+140,100/objSel.sprite_width,100/objSel.sprite_height,0,c_white,1);
        draw_rectangle( initX+VIEW_WIDTH-300,initY+210,
                        initX+VIEW_WIDTH-200,initY+230,1);
        draw_rectangle_color(   initX+VIEW_WIDTH-300,initY+210,
                                initX+VIEW_WIDTH-300+100*objSel.hitpointsCurr/objSel.hitpointsMax,initY+230,
                                c_green,c_green,c_green,c_green,0);
    }
}
draw_set_color(prevColor);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
